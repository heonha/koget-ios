## 참고: 아래의 모든 구성 항목은 자리 표시자가 있는 예일 뿐입니다. 주석을 제거할 때 필요에 따라 편집하고 조정해야 합니다.

## 구성 항목이 모두 공통 입력/출력 상위 디렉토리를 사용하는 경우 여기에서 지정할 수 있습니다.
## 구성의 나머지 부분에 있는 모든 입력/출력 경로는 이에 상대적으로 표현됩니다.
## 이 두 개의 최상위 키는 선택 사항이며 기본값은 "."입니다. (구성 파일의 디렉토리).
# input_dir: MyLib/Sources/
# output_dir: MyLib/Generated/


## 현지화된 문자열에 대한 상수를 생성합니다.
## SwiftGen이 하나의 로케일(일반적으로 Base.lproj 또는 en.lproj 또는 개발 지역)만 구문 분석하는지 확인하십시오. 그렇지 않으면 동일한 키를 여러 번 생성합니다.
## SwiftGen은 해당 폴더에서 발견된 모든 `.strings` 파일을 구문 분석합니다.
 strings:
   inputs:
     - koget/ko.lproj/Localizable.strings
   outputs:
     - templateName: structured-swift5
       output: koget/Helper/Strings+Generated.swift
       params:
         enumName: S


## Generate constants for your Assets Catalogs, including constants for images, colors, ARKit resources, etc.
##   This example also shows how to provide additional parameters to your template to customize the output.
##   - Especially the `forceProvidesNamespaces: true` param forces to create sub-namespace for each folder/group used in your Asset Catalogs, even the ones without "Provides Namespace". Without this param, SwiftGen only generates sub-namespaces for folders/groups which have the "Provides Namespace" box checked in the Inspector pane.
##   - To know which params are supported for a template, use `swiftgen template doc xcassets swift5` to open the template documentation on GitHub.
# xcassets:
#   inputs:
#     - Main.xcassets
#     - ProFeatures.xcassets
#   outputs:
#     - templateName: swift5
#       params:
#         forceProvidesNamespaces: true
#       output: XCAssets+Generated.swift


## Generate constants for your storyboards and XIBs.
##   This one generates 2 output files, one containing the storyboard scenes, and another for the segues.
##    (You can remove the segues entry if you don't use segues in your IB files).
##   For `inputs` we can use "." here (aka "current directory", at least relative to `input_dir` = "MyLib/Sources"),
##    and SwiftGen will recursively find all `*.storyboard` and `*.xib` files in there.
# ib:
#   inputs:
#     - .
#   outputs:
#     - templateName: scenes-swift5
#       output: IB-Scenes+Generated.swift
#     - templateName: segues-swift5
#       output: IB-Segues+Generated.swift


## There are other parsers available for you to use depending on your needs, for example:
##  - `fonts` (if you have custom ttf/ttc font files)
##  - `coredata` (for CoreData models)
##  - `json`, `yaml` and `plist` (to parse custom JSON/YAML/Plist files and generate code from their content)
## …
##
## For more info, use `swiftgen config doc` to open the full documentation on GitHub.
## https://github.com/SwiftGen/SwiftGen/tree/6.6.2/Documentation/
